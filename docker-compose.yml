version: "3.8"

services:
  traefik:
    image: traefik:v2.10
    labels:
      - "app=traefik"
    container_name: traefik
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--metrics.prometheus=true"
      - "--metrics.prometheus.entryPoint=web"
      - "--api.dashboard=true"
      - "--api.insecure=true"
    ports:
      - "80:80"
      - "8080:8080" # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - web

  web:
    build:
      context: "."
      platforms:
        - linux/arm64/v8
    image: ghcr.io/tuky191/sre-challenge-michal:v0.0.1
    stop_signal: SIGINT
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web.rule=PathPrefix(`/`)"
      - "traefik.http.services.web.loadbalancer.server.port=5000"
      - "app=service"
    environment:
      - FLASK_ENV=production
      - FLASK_DEBUG=true
      - FLASK_RUN_HOST=0.0.0.0
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      replicas: 1

  redis:
    labels:
      - "app=redis"
    image: "redis:6.2-alpine"
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # elasticsearch:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:7.17.5
  #   container_name: elasticsearch
  #   environment:
  #     - discovery.type=single-node
  #     - xpack.security.enabled=false
  #   ports:
  #     - "9200:9200"
  #   volumes:
  #     - esdata:/usr/share/elasticsearch/data

  # logstash:
  #   image: docker.elastic.co/logstash/logstash:7.17.5
  #   container_name: logstash
  #   volumes:
  #     - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
  #   ports:
  #     - "5044:5044"
  #   depends_on:
  #     - elasticsearch

  # kibana:
  #   image: docker.elastic.co/kibana/kibana:7.17.5
  #   container_name: kibana
  #   ports:
  #     - "5601:5601"
  #   environment:
  #     - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
  #   depends_on:
  #     - elasticsearch

  # filebeat:
  #   image: docker.elastic.co/beats/filebeat:7.17.5
  #   container_name: filebeat
  #   user: root
  #   volumes:
  #     - ./filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
  #     - /var/lib/docker/containers:/var/lib/docker/containers:ro
  #     - /var/run/docker.sock:/var/run/docker.sock:ro
  #   depends_on:
  #     - logstash
  #   environment:
  #     - ELASTICSEARCH_HOSTS=elasticsearch:9200

  prometheus:
    labels:
      - "app=prometheus"
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    depends_on:
      - traefik

  grafana:
    labels:
      - "app=grafana"
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
      - loki
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/dashboards:/var/lib/grafana/dashboards

  loki:
    labels:
      - "app=loki"
    image: grafana/loki:2.9.8
    container_name: loki
    ports:
      - "3100:3100"
    volumes:
      - ./loki-config.yml:/etc/loki/local-config.yaml
      - loki_data:/loki
    command: -config.file=/etc/loki/local-config.yaml

  promtail:
    labels:
      - "app=promtail"
    image: grafana/promtail:2.9.8
    container_name: promtail
    volumes:
      - /var/log:/var/log
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - ./promtail-config.yml:/etc/promtail/config.yml
    command: -config.file=/etc/promtail/config.yml
    depends_on:
      - loki

volumes:
  esdata:
  redis-data:
  loki_data:
