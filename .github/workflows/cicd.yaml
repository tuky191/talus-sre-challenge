name: docker-build-and-deploy
on:
  pull_request:
    branches:
      - main
  push:
    tags:
      - v*
    branches:
      - main
env:
  tf_actions_working_dir: ./infra/terraform
  TF_CLOUD_TOKEN: ${{ secrets.TERRAFORM_CLOUD_TOKEN }}
  TERRAFORM_WORKSPACE_ID: ${{ vars.TERRAFORM_WORKSPACE_ID }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    defaults:
      run:
        working-directory: ${{ env.tf_actions_working_dir }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # https://docs.docker.com/build/ci/github-actions/multi-platform/
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to the github container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          images: |
            ghcr.io/${{ github.repository }}
          tags: |
            type=semver,pattern={{version}}
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}

      - name: Build docker image
        id: build
        uses: docker/build-push-action@v3
        with:
          push: ${{ github.event_name != 'pull_request' }}
          file: Dockerfile
          platforms: linux/amd64
          tags: ${{ env.DOCKER_METADATA_OUTPUT_TAGS }}
          labels: ${{ env.DOCKER_METADATA_OUTPUT_LABELS }}

      - name: Get image digest from build-push-action
        run: echo "digest=${{ steps.build.outputs.digest }}" >> $GITHUB_ENV

      - name: Run update_image_sha.sh script
        run: |
          chmod +x ./bin/update_image_sha.sh
          bash bin/update_image_sha.sh
        env:
          digest: ${{ env.digest }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          cli_config_credentials_token: ${{ secrets.TERRAFORM_CLOUD_TOKEN }}

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve
